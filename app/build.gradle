plugins {
    id 'com.android.application'
}
apply plugin: 'com.enjoy.patch'


// 定义变量，同学们注意：可以定义变量，也可以不定义变量
def app_android = this.getRootProject().ext.android
def app_version = this.getRootProject().ext.version

patch {
    debugOn true
    applicationName 'com.example.hotfixutil.MyApplication'
}

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        applicationId app_android.applicationId
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_version.versionCode
        versionName app_version.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk{
            abiFilters 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            /*打开混淆*/
            minifyEnabled true
            /*打开资源压缩*/
            shrinkResources true
            zipAlignEnabled true // Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            /*打开混淆*/
            minifyEnabled true
            /*打开资源压缩*/
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    app_dependencies.each { k, v ->
        implementation(v)
    }

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    
    implementation project(path: ':patch-lib')
//    implementation project(path: ':patch-hack')
}